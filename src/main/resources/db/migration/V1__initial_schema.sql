CREATE SEQUENCE IF NOT EXISTS treatment_seq START WITH 1 INCREMENT BY 50;

CREATE TABLE appointment
(
    appointment_id       INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    appointment_date     date                                     NOT NULL,
    status               VARCHAR(20),
    person_id            INTEGER                                  NOT NULL,
    dentist_id           INTEGER                                  NOT NULL,
    appointment_time     VARCHAR(20)                              NOT NULL,
    appointment_reminder BOOLEAN                                  NOT NULL,
    CONSTRAINT pk_appointment PRIMARY KEY (appointment_id)
);

CREATE TABLE appointment_treatment
(
    appointment_id INTEGER NOT NULL,
    treatment_id   INTEGER NOT NULL
);

CREATE TABLE assists
(
    appointment_id INTEGER NOT NULL,
    staff_id       INTEGER NOT NULL
);

CREATE TABLE dentist
(
    dentist_id     INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    person_id      INTEGER                                  NOT NULL,
    specialization VARCHAR(50),
    CONSTRAINT pk_dentist PRIMARY KEY (dentist_id)
);

CREATE TABLE equipment
(
    equipment_id          INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    equipment_name        VARCHAR(50)                              NOT NULL,
    equipment_description VARCHAR(100),
    purchase_date         date,
    CONSTRAINT pk_equipment PRIMARY KEY (equipment_id)
);

CREATE TABLE person
(
    person_id     INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    user_id       INTEGER                                  NOT NULL,
    first_name    VARCHAR(50)                              NOT NULL,
    last_name     VARCHAR(50)                              NOT NULL,
    cnp           VARCHAR(13)                              NOT NULL,
    phone         VARCHAR(20),
    gender        TEXT,
    email         VARCHAR(100),
    date_of_birth date,
    CONSTRAINT pk_person PRIMARY KEY (person_id)
);

CREATE TABLE receipt
(
    receipt_id  INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    total_cost  DECIMAL,
    issued_date date,
    person_id   INTEGER                                  NOT NULL,
    CONSTRAINT pk_receipt PRIMARY KEY (receipt_id)
);

CREATE TABLE receipt_treatment
(
    receipt_id   INTEGER NOT NULL,
    treatment_id INTEGER NOT NULL
);

CREATE TABLE roles
(
    role_id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name    VARCHAR(50)                              NOT NULL,
    CONSTRAINT pk_roles PRIMARY KEY (role_id)
);

CREATE TABLE room
(
    room_id    INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    room_name  VARCHAR(50)                              NOT NULL,
    capacity   INTEGER,
    room_floor INTEGER,
    CONSTRAINT pk_room PRIMARY KEY (room_id)
);

CREATE TABLE room_dentist
(
    dentist_id INTEGER NOT NULL,
    room_id    INTEGER NOT NULL
);

CREATE TABLE room_equipment
(
    equipment_id INTEGER NOT NULL,
    room_id      INTEGER NOT NULL
);

CREATE TABLE staff
(
    staff_id   INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    person_id  INTEGER                                  NOT NULL,
    staff_role VARCHAR(20),
    CONSTRAINT pk_staff PRIMARY KEY (staff_id)
);

CREATE TABLE treatment
(
    treatment_id          INTEGER     NOT NULL,
    treatment_name        VARCHAR(50) NOT NULL,
    treatment_description TEXT,
    price                 DECIMAL,
    CONSTRAINT pk_treatment PRIMARY KEY (treatment_id)
);

CREATE TABLE user_role
(
    role_id INTEGER NOT NULL,
    user_id INTEGER NOT NULL
);

CREATE TABLE users
(
    user_id  INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    username VARCHAR(50)                              NOT NULL,
    password VARCHAR(255)                             NOT NULL,
    enabled  BOOLEAN                                  NOT NULL,
    CONSTRAINT pk_users PRIMARY KEY (user_id)
);

ALTER TABLE dentist
    ADD CONSTRAINT uc_dentist_person UNIQUE (person_id);

ALTER TABLE person
    ADD CONSTRAINT uc_person_user UNIQUE (user_id);

ALTER TABLE staff
    ADD CONSTRAINT uc_staff_person UNIQUE (person_id);

ALTER TABLE appointment
    ADD CONSTRAINT FK_APPOINTMENT_ON_DENTIST FOREIGN KEY (dentist_id) REFERENCES dentist (dentist_id);

ALTER TABLE appointment
    ADD CONSTRAINT FK_APPOINTMENT_ON_PERSON FOREIGN KEY (person_id) REFERENCES person (person_id);

ALTER TABLE dentist
    ADD CONSTRAINT FK_DENTIST_ON_PERSON FOREIGN KEY (person_id) REFERENCES person (person_id);

ALTER TABLE person
    ADD CONSTRAINT FK_PERSON_ON_USER FOREIGN KEY (user_id) REFERENCES users (user_id);

ALTER TABLE receipt
    ADD CONSTRAINT FK_RECEIPT_ON_PERSON FOREIGN KEY (person_id) REFERENCES person (person_id);

ALTER TABLE staff
    ADD CONSTRAINT FK_STAFF_ON_PERSON FOREIGN KEY (person_id) REFERENCES person (person_id);

ALTER TABLE appointment_treatment
    ADD CONSTRAINT fk_apptre_on_appointment FOREIGN KEY (appointment_id) REFERENCES appointment (appointment_id);

ALTER TABLE appointment_treatment
    ADD CONSTRAINT fk_apptre_on_treatment FOREIGN KEY (treatment_id) REFERENCES treatment (treatment_id);

ALTER TABLE assists
    ADD CONSTRAINT fk_assists_on_appointment FOREIGN KEY (appointment_id) REFERENCES appointment (appointment_id);

ALTER TABLE assists
    ADD CONSTRAINT fk_assists_on_staff FOREIGN KEY (staff_id) REFERENCES staff (staff_id);

ALTER TABLE receipt_treatment
    ADD CONSTRAINT fk_rectre_on_receipt FOREIGN KEY (receipt_id) REFERENCES receipt (receipt_id);

ALTER TABLE receipt_treatment
    ADD CONSTRAINT fk_rectre_on_treatment FOREIGN KEY (treatment_id) REFERENCES treatment (treatment_id);

ALTER TABLE room_dentist
    ADD CONSTRAINT fk_rooden_on_dentist FOREIGN KEY (dentist_id) REFERENCES dentist (dentist_id);

ALTER TABLE room_dentist
    ADD CONSTRAINT fk_rooden_on_room FOREIGN KEY (room_id) REFERENCES room (room_id);

ALTER TABLE room_equipment
    ADD CONSTRAINT fk_rooequ_on_equipment FOREIGN KEY (equipment_id) REFERENCES equipment (equipment_id);

ALTER TABLE room_equipment
    ADD CONSTRAINT fk_rooequ_on_room FOREIGN KEY (room_id) REFERENCES room (room_id);

ALTER TABLE user_role
    ADD CONSTRAINT fk_user_role_on_role FOREIGN KEY (role_id) REFERENCES roles (role_id);

ALTER TABLE user_role
    ADD CONSTRAINT fk_user_role_on_user FOREIGN KEY (user_id) REFERENCES users (user_id);